// Code generated by go-swagger; DO NOT EDIT.

package disruptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ptv-tui/models"
)

// DisruptionsGetAllDisruptionsReader is a Reader for the DisruptionsGetAllDisruptions structure.
type DisruptionsGetAllDisruptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisruptionsGetAllDisruptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisruptionsGetAllDisruptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDisruptionsGetAllDisruptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDisruptionsGetAllDisruptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v3/disruptions] Disruptions_GetAllDisruptions", response, response.Code())
	}
}

// NewDisruptionsGetAllDisruptionsOK creates a DisruptionsGetAllDisruptionsOK with default headers values
func NewDisruptionsGetAllDisruptionsOK() *DisruptionsGetAllDisruptionsOK {
	return &DisruptionsGetAllDisruptionsOK{}
}

/*
DisruptionsGetAllDisruptionsOK describes a response with status code 200, with default header values.

All disruption information for all route types.
*/
type DisruptionsGetAllDisruptionsOK struct {
	Payload *models.V3DisruptionsResponse
}

// IsSuccess returns true when this disruptions get all disruptions o k response has a 2xx status code
func (o *DisruptionsGetAllDisruptionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disruptions get all disruptions o k response has a 3xx status code
func (o *DisruptionsGetAllDisruptionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get all disruptions o k response has a 4xx status code
func (o *DisruptionsGetAllDisruptionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this disruptions get all disruptions o k response has a 5xx status code
func (o *DisruptionsGetAllDisruptionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get all disruptions o k response a status code equal to that given
func (o *DisruptionsGetAllDisruptionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the disruptions get all disruptions o k response
func (o *DisruptionsGetAllDisruptionsOK) Code() int {
	return 200
}

func (o *DisruptionsGetAllDisruptionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions][%d] disruptionsGetAllDisruptionsOK %s", 200, payload)
}

func (o *DisruptionsGetAllDisruptionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions][%d] disruptionsGetAllDisruptionsOK %s", 200, payload)
}

func (o *DisruptionsGetAllDisruptionsOK) GetPayload() *models.V3DisruptionsResponse {
	return o.Payload
}

func (o *DisruptionsGetAllDisruptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3DisruptionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisruptionsGetAllDisruptionsBadRequest creates a DisruptionsGetAllDisruptionsBadRequest with default headers values
func NewDisruptionsGetAllDisruptionsBadRequest() *DisruptionsGetAllDisruptionsBadRequest {
	return &DisruptionsGetAllDisruptionsBadRequest{}
}

/*
DisruptionsGetAllDisruptionsBadRequest describes a response with status code 400, with default header values.

Invalid Request
*/
type DisruptionsGetAllDisruptionsBadRequest struct {
	Payload *models.V3ErrorResponse
}

// IsSuccess returns true when this disruptions get all disruptions bad request response has a 2xx status code
func (o *DisruptionsGetAllDisruptionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disruptions get all disruptions bad request response has a 3xx status code
func (o *DisruptionsGetAllDisruptionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get all disruptions bad request response has a 4xx status code
func (o *DisruptionsGetAllDisruptionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this disruptions get all disruptions bad request response has a 5xx status code
func (o *DisruptionsGetAllDisruptionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get all disruptions bad request response a status code equal to that given
func (o *DisruptionsGetAllDisruptionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the disruptions get all disruptions bad request response
func (o *DisruptionsGetAllDisruptionsBadRequest) Code() int {
	return 400
}

func (o *DisruptionsGetAllDisruptionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions][%d] disruptionsGetAllDisruptionsBadRequest %s", 400, payload)
}

func (o *DisruptionsGetAllDisruptionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions][%d] disruptionsGetAllDisruptionsBadRequest %s", 400, payload)
}

func (o *DisruptionsGetAllDisruptionsBadRequest) GetPayload() *models.V3ErrorResponse {
	return o.Payload
}

func (o *DisruptionsGetAllDisruptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisruptionsGetAllDisruptionsForbidden creates a DisruptionsGetAllDisruptionsForbidden with default headers values
func NewDisruptionsGetAllDisruptionsForbidden() *DisruptionsGetAllDisruptionsForbidden {
	return &DisruptionsGetAllDisruptionsForbidden{}
}

/*
DisruptionsGetAllDisruptionsForbidden describes a response with status code 403, with default header values.

Access Denied
*/
type DisruptionsGetAllDisruptionsForbidden struct {
	Payload *models.V3ErrorResponse
}

// IsSuccess returns true when this disruptions get all disruptions forbidden response has a 2xx status code
func (o *DisruptionsGetAllDisruptionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disruptions get all disruptions forbidden response has a 3xx status code
func (o *DisruptionsGetAllDisruptionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get all disruptions forbidden response has a 4xx status code
func (o *DisruptionsGetAllDisruptionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this disruptions get all disruptions forbidden response has a 5xx status code
func (o *DisruptionsGetAllDisruptionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get all disruptions forbidden response a status code equal to that given
func (o *DisruptionsGetAllDisruptionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the disruptions get all disruptions forbidden response
func (o *DisruptionsGetAllDisruptionsForbidden) Code() int {
	return 403
}

func (o *DisruptionsGetAllDisruptionsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions][%d] disruptionsGetAllDisruptionsForbidden %s", 403, payload)
}

func (o *DisruptionsGetAllDisruptionsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions][%d] disruptionsGetAllDisruptionsForbidden %s", 403, payload)
}

func (o *DisruptionsGetAllDisruptionsForbidden) GetPayload() *models.V3ErrorResponse {
	return o.Payload
}

func (o *DisruptionsGetAllDisruptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
