// Code generated by go-swagger; DO NOT EDIT.

package disruptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ptv-tui/models"
)

// DisruptionsGetDisruptionsByRouteReader is a Reader for the DisruptionsGetDisruptionsByRoute structure.
type DisruptionsGetDisruptionsByRouteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisruptionsGetDisruptionsByRouteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisruptionsGetDisruptionsByRouteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDisruptionsGetDisruptionsByRouteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDisruptionsGetDisruptionsByRouteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v3/disruptions/route/{route_id}] Disruptions_GetDisruptionsByRoute", response, response.Code())
	}
}

// NewDisruptionsGetDisruptionsByRouteOK creates a DisruptionsGetDisruptionsByRouteOK with default headers values
func NewDisruptionsGetDisruptionsByRouteOK() *DisruptionsGetDisruptionsByRouteOK {
	return &DisruptionsGetDisruptionsByRouteOK{}
}

/*
DisruptionsGetDisruptionsByRouteOK describes a response with status code 200, with default header values.

All disruption information (if any exists) for the specified route.
*/
type DisruptionsGetDisruptionsByRouteOK struct {
	Payload *models.V3DisruptionsResponse
}

// IsSuccess returns true when this disruptions get disruptions by route o k response has a 2xx status code
func (o *DisruptionsGetDisruptionsByRouteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disruptions get disruptions by route o k response has a 3xx status code
func (o *DisruptionsGetDisruptionsByRouteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruptions by route o k response has a 4xx status code
func (o *DisruptionsGetDisruptionsByRouteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this disruptions get disruptions by route o k response has a 5xx status code
func (o *DisruptionsGetDisruptionsByRouteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruptions by route o k response a status code equal to that given
func (o *DisruptionsGetDisruptionsByRouteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the disruptions get disruptions by route o k response
func (o *DisruptionsGetDisruptionsByRouteOK) Code() int {
	return 200
}

func (o *DisruptionsGetDisruptionsByRouteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/route/{route_id}][%d] disruptionsGetDisruptionsByRouteOK %s", 200, payload)
}

func (o *DisruptionsGetDisruptionsByRouteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/route/{route_id}][%d] disruptionsGetDisruptionsByRouteOK %s", 200, payload)
}

func (o *DisruptionsGetDisruptionsByRouteOK) GetPayload() *models.V3DisruptionsResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionsByRouteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3DisruptionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisruptionsGetDisruptionsByRouteBadRequest creates a DisruptionsGetDisruptionsByRouteBadRequest with default headers values
func NewDisruptionsGetDisruptionsByRouteBadRequest() *DisruptionsGetDisruptionsByRouteBadRequest {
	return &DisruptionsGetDisruptionsByRouteBadRequest{}
}

/*
DisruptionsGetDisruptionsByRouteBadRequest describes a response with status code 400, with default header values.

Invalid Request
*/
type DisruptionsGetDisruptionsByRouteBadRequest struct {
	Payload *models.V3ErrorResponse
}

// IsSuccess returns true when this disruptions get disruptions by route bad request response has a 2xx status code
func (o *DisruptionsGetDisruptionsByRouteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disruptions get disruptions by route bad request response has a 3xx status code
func (o *DisruptionsGetDisruptionsByRouteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruptions by route bad request response has a 4xx status code
func (o *DisruptionsGetDisruptionsByRouteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this disruptions get disruptions by route bad request response has a 5xx status code
func (o *DisruptionsGetDisruptionsByRouteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruptions by route bad request response a status code equal to that given
func (o *DisruptionsGetDisruptionsByRouteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the disruptions get disruptions by route bad request response
func (o *DisruptionsGetDisruptionsByRouteBadRequest) Code() int {
	return 400
}

func (o *DisruptionsGetDisruptionsByRouteBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/route/{route_id}][%d] disruptionsGetDisruptionsByRouteBadRequest %s", 400, payload)
}

func (o *DisruptionsGetDisruptionsByRouteBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/route/{route_id}][%d] disruptionsGetDisruptionsByRouteBadRequest %s", 400, payload)
}

func (o *DisruptionsGetDisruptionsByRouteBadRequest) GetPayload() *models.V3ErrorResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionsByRouteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisruptionsGetDisruptionsByRouteForbidden creates a DisruptionsGetDisruptionsByRouteForbidden with default headers values
func NewDisruptionsGetDisruptionsByRouteForbidden() *DisruptionsGetDisruptionsByRouteForbidden {
	return &DisruptionsGetDisruptionsByRouteForbidden{}
}

/*
DisruptionsGetDisruptionsByRouteForbidden describes a response with status code 403, with default header values.

Access Denied
*/
type DisruptionsGetDisruptionsByRouteForbidden struct {
	Payload *models.V3ErrorResponse
}

// IsSuccess returns true when this disruptions get disruptions by route forbidden response has a 2xx status code
func (o *DisruptionsGetDisruptionsByRouteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disruptions get disruptions by route forbidden response has a 3xx status code
func (o *DisruptionsGetDisruptionsByRouteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruptions by route forbidden response has a 4xx status code
func (o *DisruptionsGetDisruptionsByRouteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this disruptions get disruptions by route forbidden response has a 5xx status code
func (o *DisruptionsGetDisruptionsByRouteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruptions by route forbidden response a status code equal to that given
func (o *DisruptionsGetDisruptionsByRouteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the disruptions get disruptions by route forbidden response
func (o *DisruptionsGetDisruptionsByRouteForbidden) Code() int {
	return 403
}

func (o *DisruptionsGetDisruptionsByRouteForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/route/{route_id}][%d] disruptionsGetDisruptionsByRouteForbidden %s", 403, payload)
}

func (o *DisruptionsGetDisruptionsByRouteForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/route/{route_id}][%d] disruptionsGetDisruptionsByRouteForbidden %s", 403, payload)
}

func (o *DisruptionsGetDisruptionsByRouteForbidden) GetPayload() *models.V3ErrorResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionsByRouteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
