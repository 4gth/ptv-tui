// Code generated by go-swagger; DO NOT EDIT.

package disruptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ptv-tui/models"
)

// DisruptionsGetDisruptionModesReader is a Reader for the DisruptionsGetDisruptionModes structure.
type DisruptionsGetDisruptionModesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisruptionsGetDisruptionModesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisruptionsGetDisruptionModesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDisruptionsGetDisruptionModesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDisruptionsGetDisruptionModesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v3/disruptions/modes] Disruptions_GetDisruptionModes", response, response.Code())
	}
}

// NewDisruptionsGetDisruptionModesOK creates a DisruptionsGetDisruptionModesOK with default headers values
func NewDisruptionsGetDisruptionModesOK() *DisruptionsGetDisruptionModesOK {
	return &DisruptionsGetDisruptionModesOK{}
}

/*
DisruptionsGetDisruptionModesOK describes a response with status code 200, with default header values.

Disruption specific modes
*/
type DisruptionsGetDisruptionModesOK struct {
	Payload *models.V3DisruptionModesResponse
}

// IsSuccess returns true when this disruptions get disruption modes o k response has a 2xx status code
func (o *DisruptionsGetDisruptionModesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disruptions get disruption modes o k response has a 3xx status code
func (o *DisruptionsGetDisruptionModesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruption modes o k response has a 4xx status code
func (o *DisruptionsGetDisruptionModesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this disruptions get disruption modes o k response has a 5xx status code
func (o *DisruptionsGetDisruptionModesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruption modes o k response a status code equal to that given
func (o *DisruptionsGetDisruptionModesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the disruptions get disruption modes o k response
func (o *DisruptionsGetDisruptionModesOK) Code() int {
	return 200
}

func (o *DisruptionsGetDisruptionModesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/modes][%d] disruptionsGetDisruptionModesOK %s", 200, payload)
}

func (o *DisruptionsGetDisruptionModesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/modes][%d] disruptionsGetDisruptionModesOK %s", 200, payload)
}

func (o *DisruptionsGetDisruptionModesOK) GetPayload() *models.V3DisruptionModesResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionModesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3DisruptionModesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisruptionsGetDisruptionModesBadRequest creates a DisruptionsGetDisruptionModesBadRequest with default headers values
func NewDisruptionsGetDisruptionModesBadRequest() *DisruptionsGetDisruptionModesBadRequest {
	return &DisruptionsGetDisruptionModesBadRequest{}
}

/*
DisruptionsGetDisruptionModesBadRequest describes a response with status code 400, with default header values.

Invalid Request
*/
type DisruptionsGetDisruptionModesBadRequest struct {
	Payload *models.V3ErrorResponse
}

// IsSuccess returns true when this disruptions get disruption modes bad request response has a 2xx status code
func (o *DisruptionsGetDisruptionModesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disruptions get disruption modes bad request response has a 3xx status code
func (o *DisruptionsGetDisruptionModesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruption modes bad request response has a 4xx status code
func (o *DisruptionsGetDisruptionModesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this disruptions get disruption modes bad request response has a 5xx status code
func (o *DisruptionsGetDisruptionModesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruption modes bad request response a status code equal to that given
func (o *DisruptionsGetDisruptionModesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the disruptions get disruption modes bad request response
func (o *DisruptionsGetDisruptionModesBadRequest) Code() int {
	return 400
}

func (o *DisruptionsGetDisruptionModesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/modes][%d] disruptionsGetDisruptionModesBadRequest %s", 400, payload)
}

func (o *DisruptionsGetDisruptionModesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/modes][%d] disruptionsGetDisruptionModesBadRequest %s", 400, payload)
}

func (o *DisruptionsGetDisruptionModesBadRequest) GetPayload() *models.V3ErrorResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionModesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisruptionsGetDisruptionModesForbidden creates a DisruptionsGetDisruptionModesForbidden with default headers values
func NewDisruptionsGetDisruptionModesForbidden() *DisruptionsGetDisruptionModesForbidden {
	return &DisruptionsGetDisruptionModesForbidden{}
}

/*
DisruptionsGetDisruptionModesForbidden describes a response with status code 403, with default header values.

Access Denied
*/
type DisruptionsGetDisruptionModesForbidden struct {
	Payload *models.V3ErrorResponse
}

// IsSuccess returns true when this disruptions get disruption modes forbidden response has a 2xx status code
func (o *DisruptionsGetDisruptionModesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disruptions get disruption modes forbidden response has a 3xx status code
func (o *DisruptionsGetDisruptionModesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruption modes forbidden response has a 4xx status code
func (o *DisruptionsGetDisruptionModesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this disruptions get disruption modes forbidden response has a 5xx status code
func (o *DisruptionsGetDisruptionModesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruption modes forbidden response a status code equal to that given
func (o *DisruptionsGetDisruptionModesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the disruptions get disruption modes forbidden response
func (o *DisruptionsGetDisruptionModesForbidden) Code() int {
	return 403
}

func (o *DisruptionsGetDisruptionModesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/modes][%d] disruptionsGetDisruptionModesForbidden %s", 403, payload)
}

func (o *DisruptionsGetDisruptionModesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/modes][%d] disruptionsGetDisruptionModesForbidden %s", 403, payload)
}

func (o *DisruptionsGetDisruptionModesForbidden) GetPayload() *models.V3ErrorResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionModesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
