// Code generated by go-swagger; DO NOT EDIT.

package disruptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"ptv-tui/models"
)

// DisruptionsGetDisruptionByIDReader is a Reader for the DisruptionsGetDisruptionByID structure.
type DisruptionsGetDisruptionByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisruptionsGetDisruptionByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisruptionsGetDisruptionByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDisruptionsGetDisruptionByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDisruptionsGetDisruptionByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v3/disruptions/{disruption_id}] Disruptions_GetDisruptionById", response, response.Code())
	}
}

// NewDisruptionsGetDisruptionByIDOK creates a DisruptionsGetDisruptionByIDOK with default headers values
func NewDisruptionsGetDisruptionByIDOK() *DisruptionsGetDisruptionByIDOK {
	return &DisruptionsGetDisruptionByIDOK{}
}

/*
DisruptionsGetDisruptionByIDOK describes a response with status code 200, with default header values.

Disruption information for the specified disruption ID.
*/
type DisruptionsGetDisruptionByIDOK struct {
	Payload *models.V3DisruptionResponse
}

// IsSuccess returns true when this disruptions get disruption by Id o k response has a 2xx status code
func (o *DisruptionsGetDisruptionByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disruptions get disruption by Id o k response has a 3xx status code
func (o *DisruptionsGetDisruptionByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruption by Id o k response has a 4xx status code
func (o *DisruptionsGetDisruptionByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this disruptions get disruption by Id o k response has a 5xx status code
func (o *DisruptionsGetDisruptionByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruption by Id o k response a status code equal to that given
func (o *DisruptionsGetDisruptionByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the disruptions get disruption by Id o k response
func (o *DisruptionsGetDisruptionByIDOK) Code() int {
	return 200
}

func (o *DisruptionsGetDisruptionByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/{disruption_id}][%d] disruptionsGetDisruptionByIdOK %s", 200, payload)
}

func (o *DisruptionsGetDisruptionByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/{disruption_id}][%d] disruptionsGetDisruptionByIdOK %s", 200, payload)
}

func (o *DisruptionsGetDisruptionByIDOK) GetPayload() *models.V3DisruptionResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3DisruptionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisruptionsGetDisruptionByIDBadRequest creates a DisruptionsGetDisruptionByIDBadRequest with default headers values
func NewDisruptionsGetDisruptionByIDBadRequest() *DisruptionsGetDisruptionByIDBadRequest {
	return &DisruptionsGetDisruptionByIDBadRequest{}
}

/*
DisruptionsGetDisruptionByIDBadRequest describes a response with status code 400, with default header values.

Invalid Request
*/
type DisruptionsGetDisruptionByIDBadRequest struct {
	Payload *models.V3ErrorResponse
}

// IsSuccess returns true when this disruptions get disruption by Id bad request response has a 2xx status code
func (o *DisruptionsGetDisruptionByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disruptions get disruption by Id bad request response has a 3xx status code
func (o *DisruptionsGetDisruptionByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruption by Id bad request response has a 4xx status code
func (o *DisruptionsGetDisruptionByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this disruptions get disruption by Id bad request response has a 5xx status code
func (o *DisruptionsGetDisruptionByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruption by Id bad request response a status code equal to that given
func (o *DisruptionsGetDisruptionByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the disruptions get disruption by Id bad request response
func (o *DisruptionsGetDisruptionByIDBadRequest) Code() int {
	return 400
}

func (o *DisruptionsGetDisruptionByIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/{disruption_id}][%d] disruptionsGetDisruptionByIdBadRequest %s", 400, payload)
}

func (o *DisruptionsGetDisruptionByIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/{disruption_id}][%d] disruptionsGetDisruptionByIdBadRequest %s", 400, payload)
}

func (o *DisruptionsGetDisruptionByIDBadRequest) GetPayload() *models.V3ErrorResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisruptionsGetDisruptionByIDForbidden creates a DisruptionsGetDisruptionByIDForbidden with default headers values
func NewDisruptionsGetDisruptionByIDForbidden() *DisruptionsGetDisruptionByIDForbidden {
	return &DisruptionsGetDisruptionByIDForbidden{}
}

/*
DisruptionsGetDisruptionByIDForbidden describes a response with status code 403, with default header values.

Access Denied
*/
type DisruptionsGetDisruptionByIDForbidden struct {
	Payload *models.V3ErrorResponse
}

// IsSuccess returns true when this disruptions get disruption by Id forbidden response has a 2xx status code
func (o *DisruptionsGetDisruptionByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disruptions get disruption by Id forbidden response has a 3xx status code
func (o *DisruptionsGetDisruptionByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disruptions get disruption by Id forbidden response has a 4xx status code
func (o *DisruptionsGetDisruptionByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this disruptions get disruption by Id forbidden response has a 5xx status code
func (o *DisruptionsGetDisruptionByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this disruptions get disruption by Id forbidden response a status code equal to that given
func (o *DisruptionsGetDisruptionByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the disruptions get disruption by Id forbidden response
func (o *DisruptionsGetDisruptionByIDForbidden) Code() int {
	return 403
}

func (o *DisruptionsGetDisruptionByIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/{disruption_id}][%d] disruptionsGetDisruptionByIdForbidden %s", 403, payload)
}

func (o *DisruptionsGetDisruptionByIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v3/disruptions/{disruption_id}][%d] disruptionsGetDisruptionByIdForbidden %s", 403, payload)
}

func (o *DisruptionsGetDisruptionByIDForbidden) GetPayload() *models.V3ErrorResponse {
	return o.Payload
}

func (o *DisruptionsGetDisruptionByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
