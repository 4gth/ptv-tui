// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V3SiriLineRefDirectionRefStopPointRef v3 siri line ref direction ref stop point ref
//
// swagger:model V3.SiriLineRefDirectionRefStopPointRef
type V3SiriLineRefDirectionRefStopPointRef struct {

	// Siri DirectionRef  (in, out, up, down, clockwise, counterclockwise, Inbound, Outbound)
	// Required: true
	// Enum: [1,2,5,10,16,32,65,130]
	DirectionRef *int32 `json:"direction_ref"`

	// Siri LineRef
	// Required: true
	LineRef *string `json:"line_ref"`

	// Siri StopPointRef
	// Required: true
	StopPointRef *int32 `json:"stop_point_ref"`
}

// Validate validates this v3 siri line ref direction ref stop point ref
func (m *V3SiriLineRefDirectionRefStopPointRef) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirectionRef(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLineRef(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStopPointRef(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v3SiriLineRefDirectionRefStopPointRefTypeDirectionRefPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[1,2,5,10,16,32,65,130]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3SiriLineRefDirectionRefStopPointRefTypeDirectionRefPropEnum = append(v3SiriLineRefDirectionRefStopPointRefTypeDirectionRefPropEnum, v)
	}
}

// prop value enum
func (m *V3SiriLineRefDirectionRefStopPointRef) validateDirectionRefEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, v3SiriLineRefDirectionRefStopPointRefTypeDirectionRefPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V3SiriLineRefDirectionRefStopPointRef) validateDirectionRef(formats strfmt.Registry) error {

	if err := validate.Required("direction_ref", "body", m.DirectionRef); err != nil {
		return err
	}

	// value enum
	if err := m.validateDirectionRefEnum("direction_ref", "body", *m.DirectionRef); err != nil {
		return err
	}

	return nil
}

func (m *V3SiriLineRefDirectionRefStopPointRef) validateLineRef(formats strfmt.Registry) error {

	if err := validate.Required("line_ref", "body", m.LineRef); err != nil {
		return err
	}

	return nil
}

func (m *V3SiriLineRefDirectionRefStopPointRef) validateStopPointRef(formats strfmt.Registry) error {

	if err := validate.Required("stop_point_ref", "body", m.StopPointRef); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v3 siri line ref direction ref stop point ref based on context it is used
func (m *V3SiriLineRefDirectionRefStopPointRef) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V3SiriLineRefDirectionRefStopPointRef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3SiriLineRefDirectionRefStopPointRef) UnmarshalBinary(b []byte) error {
	var res V3SiriLineRefDirectionRefStopPointRef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
