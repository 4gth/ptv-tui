// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V3SiriDownstreamSubscriptionTopic v3 siri downstream subscription topic
//
// swagger:model V3.SiriDownstreamSubscriptionTopic
type V3SiriDownstreamSubscriptionTopic struct {

	// direction ref
	// Enum: [1,2,5,10,16,32,65,130]
	DirectionRef int32 `json:"direction_ref,omitempty"`

	// line ref
	LineRef string `json:"line_ref,omitempty"`

	// route type
	// Enum: [0,1,2,3,4]
	RouteType int32 `json:"route_type,omitempty"`
}

// Validate validates this v3 siri downstream subscription topic
func (m *V3SiriDownstreamSubscriptionTopic) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirectionRef(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRouteType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v3SiriDownstreamSubscriptionTopicTypeDirectionRefPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[1,2,5,10,16,32,65,130]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3SiriDownstreamSubscriptionTopicTypeDirectionRefPropEnum = append(v3SiriDownstreamSubscriptionTopicTypeDirectionRefPropEnum, v)
	}
}

// prop value enum
func (m *V3SiriDownstreamSubscriptionTopic) validateDirectionRefEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, v3SiriDownstreamSubscriptionTopicTypeDirectionRefPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V3SiriDownstreamSubscriptionTopic) validateDirectionRef(formats strfmt.Registry) error {
	if swag.IsZero(m.DirectionRef) { // not required
		return nil
	}

	// value enum
	if err := m.validateDirectionRefEnum("direction_ref", "body", m.DirectionRef); err != nil {
		return err
	}

	return nil
}

var v3SiriDownstreamSubscriptionTopicTypeRouteTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2,3,4]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3SiriDownstreamSubscriptionTopicTypeRouteTypePropEnum = append(v3SiriDownstreamSubscriptionTopicTypeRouteTypePropEnum, v)
	}
}

// prop value enum
func (m *V3SiriDownstreamSubscriptionTopic) validateRouteTypeEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, v3SiriDownstreamSubscriptionTopicTypeRouteTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V3SiriDownstreamSubscriptionTopic) validateRouteType(formats strfmt.Registry) error {
	if swag.IsZero(m.RouteType) { // not required
		return nil
	}

	// value enum
	if err := m.validateRouteTypeEnum("route_type", "body", m.RouteType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v3 siri downstream subscription topic based on context it is used
func (m *V3SiriDownstreamSubscriptionTopic) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V3SiriDownstreamSubscriptionTopic) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3SiriDownstreamSubscriptionTopic) UnmarshalBinary(b []byte) error {
	var res V3SiriDownstreamSubscriptionTopic
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
