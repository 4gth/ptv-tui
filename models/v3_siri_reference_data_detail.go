// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V3SiriReferenceDataDetail v3 siri reference data detail
//
// swagger:model V3.SiriReferenceDataDetail
type V3SiriReferenceDataDetail struct {

	// no match reason
	// Enum: [1,2,3,4,5]
	NoMatchReason int32 `json:"NoMatchReason,omitempty"`

	// direction id
	DirectionID int32 `json:"direction_id,omitempty"`

	// route id
	RouteID int32 `json:"route_id,omitempty"`

	// Route number
	RouteNumberShort string `json:"route_number_short,omitempty"`

	// route type
	RouteType int32 `json:"route_type,omitempty"`

	// Authority (Upstream SIRI provider) of a route and direction
	TrackingSupplierID int32 `json:"tracking_supplier_id,omitempty"`
}

// Validate validates this v3 siri reference data detail
func (m *V3SiriReferenceDataDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNoMatchReason(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var v3SiriReferenceDataDetailTypeNoMatchReasonPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[1,2,3,4,5]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3SiriReferenceDataDetailTypeNoMatchReasonPropEnum = append(v3SiriReferenceDataDetailTypeNoMatchReasonPropEnum, v)
	}
}

// prop value enum
func (m *V3SiriReferenceDataDetail) validateNoMatchReasonEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, v3SiriReferenceDataDetailTypeNoMatchReasonPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *V3SiriReferenceDataDetail) validateNoMatchReason(formats strfmt.Registry) error {
	if swag.IsZero(m.NoMatchReason) { // not required
		return nil
	}

	// value enum
	if err := m.validateNoMatchReasonEnum("NoMatchReason", "body", m.NoMatchReason); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v3 siri reference data detail based on context it is used
func (m *V3SiriReferenceDataDetail) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V3SiriReferenceDataDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3SiriReferenceDataDetail) UnmarshalBinary(b []byte) error {
	var res V3SiriReferenceDataDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
