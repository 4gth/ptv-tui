// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V3StopTicket v3 stop ticket
//
// swagger:model V3.StopTicket
type V3StopTicket struct {

	// Indicates whether the stop is inside the free fare zone
	IsFreeFareZone bool `json:"is_free_fare_zone,omitempty"`

	// ticket checks
	TicketChecks bool `json:"ticket_checks,omitempty"`

	// ticket machine
	TicketMachine bool `json:"ticket_machine,omitempty"`

	// Indicates the ticket type for the stop (myki, paper or both)
	TicketType string `json:"ticket_type,omitempty"`

	// ticket zones
	TicketZones []int32 `json:"ticket_zones"`

	// vline reservation
	VlineReservation bool `json:"vline_reservation,omitempty"`

	// Description of the zone
	Zone string `json:"zone,omitempty"`
}

// Validate validates this v3 stop ticket
func (m *V3StopTicket) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v3 stop ticket based on context it is used
func (m *V3StopTicket) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V3StopTicket) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3StopTicket) UnmarshalBinary(b []byte) error {
	var res V3StopTicket
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
